platform:
  - x64

branches:
  only:
    - master # This will still build PRs.

image:
  - Visual Studio 2017
  - Visual Studio 2019

environment:
  matrix:
    - arch: x86
    - arch: x64

install:
  # Configuration for Meson
  - cmd: if %arch%==x86 (set PYTHON_ROOT=C:\python37) else (set PYTHON_ROOT=C:\python37-x64)
  - cmd: echo Using Python at %PYTHON_ROOT%
  - cmd: set PATH=%cd%;%PYTHON_ROOT%;%PYTHON_ROOT%\Scripts;%PATH%
  - cmd: pip install ninja meson
  # Enable using MSVC through command line.
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %arch% )
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2019" ( call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" %arch% )

build_script:
  - cmd: echo Building on image %APPVEYOR_BUILD_WORKER_IMAGE%, arch %arch%.
  # Build with CMake
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( SET "VS_VERSION=Visual Studio 15 Win64" )  # 15 because Visual Studio 2017 is actually version 15.0. Win64 because it is on x64.
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2019" ( SET "VS_VERSION=Visual Studio 16" )  # 16 because Visual Studio 2019 is actually version 16.0.
  - cmd: cmake -G "%VS_VERSION%" .
  - cmd: cmake --build . --config Release
  # # Build with Meson
  # - cmd: meson setup --backend=ninja build_dir .
  # - cmd: meson compile -v -C build_dir

test_script:
  # Test what CMake built.
  - cmd: bin\Release\runTests.exe
  # # Test what Meson built.
  # - cmd: meson test -C build_dir
